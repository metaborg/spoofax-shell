<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>shell.core</artifactId>
    <name>Core library</name>
    <description>Spoofax Shell core library</description>
    <packaging>jar</packaging>

    <parent>
        <artifactId>shell</artifactId>
        <groupId>org.metaborg.spoofax</groupId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>..</relativePath>
    </parent>

    <properties>
        <forceContextQualifier>qualifier</forceContextQualifier>
    </properties>

    <dependencies>
        <!-- From here on, all plugins are inherited from the parent project. -->
        <dependency>
            <groupId>org.metaborg</groupId>
            <artifactId>org.metaborg.spoofax.core</artifactId>
        </dependency>
        <!-- Test dependencies. -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Generate MANIFEST.MF, to make project available as an Eclipse plugin. -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>3.0.1</version>
                <extensions>true</extensions>
                <configuration>
                    <manifestLocation>META-INF</manifestLocation>
                    <instructions>
                        <!-- Fix names not to include the groupId. -->
                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                        <Bundle-Name>${project.artifactId}</Bundle-Name>
                        <!-- Replace SNAPSHOT in the manifest version with given qualifier. -->
                        <Bundle-Version>$(replace;${project.version};-SNAPSHOT;.${forceContextQualifier})</Bundle-Version>
                        <!-- Also export packages that contain '.impl' -->
                        <Export-Package>*</Export-Package>
                        <!-- Don't declare dependency on Java library packages. -->
                        <!-- Allow dependencies to Metaborg artifacts without a provider. -->
                        <!-- Use Metaborg provider for rest of the packages, these are external dependencies that should not 
                             conflict with other Eclipse plugins. -->
                        <Import-Package>
                            !sun.misc,
                            !sun.nio.cs,
                            !org.junit,
                            !javax*,
                            !org.xml*,
                            org.spoofax*,
                            org.metaborg*,
                            org.strategoxt.*,
                            org.apache.tools.ant,
                            *;provider=metaborg;mandatory:=provider
                        </Import-Package>
                        <!-- Include transitive dependencies, so that classes of transitive dependencies are available. -->
                        <Embed-Transitive>true</Embed-Transitive>
                        <!-- Allow buddy loading -->
                        <Eclipse-BuddyPolicy>registered</Eclipse-BuddyPolicy>
                        <!-- Don't generate uses declarations in exported packages. -->
                        <_nouses>true</_nouses>
                        <!-- Don't use version of this package if no version can be determined. -->
                        <_nodefaultversion>true</_nodefaultversion>
                    </instructions>
                </configuration>
                <!-- Hook manifest generation into the process-classes phase, because this is not automatically done for 
                     projects with 'jar' packaging. -->
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Add the generated MANIFEST.MF to the resulting JAR file. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <archive>
                        <manifestFile>META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>
            <!-- From here on, all plugins are inherited from the parent project. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <!-- Correctly resolve the checkstyle config file in the parent directory. -->
                    <configLocation>${project.parent.relativePath}/checkstyle.xml</configLocation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
